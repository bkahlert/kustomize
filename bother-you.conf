bother-you {
    os = "RaspberryPiLite"

    cstmzr {
        size = 4294967296
        enable-ssh = true
        # TODO env ssh.authorized-keys=[]

        username-rename = ["pi", "${USERNAME}"]
        password-change = ["${USERNAME}", "${PASSWORD}"]

        usb-otg-profiles = ["g_ether","g_webcam"]

        scripts = [
            [
            "the-basics",
            """
                sudo -i

                : configure SSH port
                sed -i 's/^\#Port 22$/Port 3421/g' /etc/ssh/sshd_config

                : configure DHCP and DNS for "usb0"
                apt-get install -y -m dnsmasq && apt-get autoremove -y -m
                sed -i 's/^\#name_servers=127.0.0.1$/name_servers="::1 127.0.0.1"/g' /etc/resolvconf.conf && resolvconf -u && chattr +i /etc/resolv.conf
                dnsmasq_conf=$(printf \"listen-address=::1,127.0.0.1,192.168.168.192\nno-resolv\nserver=8.8.8.8\nserver=8.8.4.4\nexpand-hosts\ndomain=reflector\naddress=/reflector/192.168.168.192\ndhcp-authoritative\ndomain-needed\nbogus-priv\ninterface=usb0\ndhcp-range=192.168.168.168,192.168.168.189,24h\ndhcp-option=option:dns-server,192.168.168.192\") && [ -f /etc/dnsmasq.conf ] && [ \"$(cat /etc/dnsmasq.conf)\" = \"$dnsmasq_conf\" ] || echo \"$dnsmasq_conf\" > /etc/dnsmasq.conf
                systemctl enable dnsmasq

                : remove unused DHCP clients
                apt-get purge -qq -m isc-dhcp-client
                apt-get purge -y -m udhcpd
                apt-get autoremove -y -m

                : set timezone to UTC
                timedatectl set-local-rtc 0

                : set timezone to Europe/Berlin
                ln -sf /usr/share/zoneinfo/Europe/Berlin /etc/localtime

                : set keyboard layout to "de"
                sed -i 's/XKBLAYOUT=\"\w*"/XKBLAYOUT=\"'de'\"/g' /etc/default/keyboard

                : set locale to "de_DE"
                locale_conf=$(printf 'LANGUAGE="en_US de_DE fr_FR"\nLANG="C"\nLC_ADDRESS="de_DE.UTF-8"\nLC_COLLATE="C"\nLC_CTYPE="C"\nLC_MONETARY="de_DE.UTF-8"\nLC_MEASUREMENT="de_DE.UTF-8"\nLC_MESSAGES="C"\nLC_NUMERIC="de_DE.UTF-8"\nLC_PAPER="de_DE.UTF-8"\nLC_RESPONSE="C"\nLC_TELEPHONE="C"\nLC_TIME="de_DE.UTF-8"') && [ -f /etc/locale.conf ] && [ "$(cat /etc/locale.conf)" = "$locale_conf" ] || echo "$locale_conf" > /etc/locale.conf
                locale_gen=$(printf 'de_DE.UTF-8 UTF-8\nen_GB.UTF-8 UTF-8\nen_US.UTF-8 UTF-8') && [ "$(cat /etc/locale.gen)" = "$locale_gen" ] || { echo "$locale_gen" > /etc/locale.gen; /usr/sbin/locale-gen; : "${LANG:=en_US.utf8}"; export LANG; }

                : install build tools
                apt-get update -qq -m; apt-get install -qq -m build-essential git

                : install Remote.it
                apt-get install -qq -m remoteit

                : install health checks
                command -v sch >/dev/null 2>&1 || { apt-get update; pip3 install sch; }

                exit
            """,
            ],
            [
            "install-node-red",
            """
                sudo -i

                : install Node-RED
                #nohup bash -c 'i=1; while [ 10 -gt $i ]; do echo "Installing Node-RED, attempt $i/10"; curl -sL -o nodered-install.sh https://raw.githubusercontent.com/node-red/linux-installers/master/deb/update-nodejs-and-nodered && chmod +x nodered-install.sh && echo "y\ry\r" | bash nodered-install.sh && systemctl enable nodered.service && break; ((i = i+1)); done;'

                : install Docker pre-requisites
                apt-get install -qq -m apt-transport-https ca-certificates software-properties-common
                cat /boot/cmdline.txt | grep -a " cgroup_enable=cpuset" 1>/dev/null || echo -n "$(cat /boot/cmdline.txt) cgroup_enable=cpuset" | sudo tee /boot/cmdline.txt
                cat /boot/cmdline.txt | grep -a " cgroup_enable=memory" 1>/dev/null || echo -n "$(cat /boot/cmdline.txt) cgroup_enable=memory" | sudo tee /boot/cmdline.txt

                : install Docker
                curl -fsSL https://get.docker.com -o - | sudo sh
                usermod -aG docker pi
                usermod -aG docker bkahlert

                : install dockerized Node-RED
                docker start reflector-backend || docker run -d --restart unless-stopped -p 1880:8333 -v /home/pi/reflector-backend:/data -e TZ=Europe/Berlin --name reflector-backend nodered/node-red:1.1.3-10-arm32v6
                # $ docker run --privileged -d whatever
                # $ docker run --device /dev/gpiomem -d whatever

                exit
            """,
            ],
            [
            "misc",
            """
                sudo -i

                :
                #TODO # Bluetooth
                #apt-get install bluez-tools

                : install Avahi
                apt-get install -qq -m avahi-daemon
                mkdir -p /etc/avahi/services
                cat <<EOF >/etc/avahi/services/bother-you.conf
                <?xml version="1.0" standalone='no'?><!--*-nxml-*-->
                <!DOCTYPE service-group SYSTEM "avahi-service.dtd">
                <service-group>
                  <name replace-wildcards="yes">┴┬┴┤･ω･)ﾉ   %h   Σ(‘Д’⁕)!?</name>
                  <service>
                    <type>_http._tcp</type>
                    <port>80</port>
                    <txt-record>path=/status</txt-record>
                  </service>
                  <service>
                    <type>_ssh._tcp</type>
                    <port>3421</port>
                    <txt-record>user=pi</txt-record>
                  </service>
                  <service>
                    <type>_smb._tcp</type>
                    <port>445</port>
                    <txt-record>user=pi</txt-record>
                    <txt-record>path=/home</txt-record>
                  </service>
                  <service>
                    <type>_device-info._tcp</type>
                    <port>0</port>
                    <txt-record>model=AirPortExtreme5</txt-record>
                    <!-- check /System/Library/CoreServices/CoreTypes.bundle/Contents/Info.plist for all possible values -->
                  </service>
                </service-group>
                EOF
                systemctl enable avahi-daemon
                systemctl start avahi-daemon

                : install CIFS/SMB
                apt-get install -qq -m samba samba-common-bin smbclient cifs-utils
                mkdir -p /etc/samba
                cat <<EOF >>etc/samba/smb.conf
                [home]
                path = /home/${username}
                writeable=Yes
                create mask=0744
                directory mask=0744
                public=no
                EOF
                echo -ne "$password\n$password\n" | smbpasswd -a -s "$username"

                # install browser
                #nohup bash -c "apt-get midori -qq -m"

# TODO has all to be installed inside docker

                #https://www.npmjs.com/package/node-red-contrib-easybotics-led-matrix
                # run as root
                #sudo systemctl enable nodered.service
                #sudo npm config set unsafe-perm true

                #https://www.npmjs.com/package/node-red-contrib-huemagic
                #npm install node-red-dashboard

                exit
            """,
            ],
        ]

        flash.auto=true
    }
}
