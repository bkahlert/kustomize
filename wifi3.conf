img {
  # wifi was working TODO; GET DHCP RUNNING FOR USB0
  trace = false

  name = wifi3
  os = Raspberry Pi OS Lite

  timezone = Europe/Berlin

  hostname {
    name: "wifi3"
    random-suffix: true
  }

  wifi {
    wpa-supplicant = ${IMG_CSTMZR_WPA_SUPPLICANT}
    auto-reconnect = false
    power-safe-mode = false
  }

  ssh {
    enabled: true
    port: 22
    authorized-keys = {
      files: ["$HOME/.ssh/id_*.pub"]
    }
  }

  usb-gadgets {
    ethernet {
      dhcpRange: 192.168.168.160..192.168.168.174
      deviceAddress: 192.168.168.168
      hostAsDefaultGateway: false # TODO change to true
      enableSerialConsole: false
      manufacturer: "Bj√∂rn Kahlert",
      product: "May I Bother You?",
    }
  }

  setup = [
    {
      name: misc
      scripts: [
        {
          name: "apt-get update -o Acquire::Check-Valid-Until=false -o Acquire::Check-Date=false"
          content: """
              apt-get update -o Acquire::Check-Valid-Until=false -o Acquire::Check-Date=false
              """
        },
        {
          name: "set keyboard layout to de ‚úßŸ©(‚Ä¢ÃÅ‚åÑ‚Ä¢ÃÅ‡πë)"
          content: """
              sed -i 's/XKBLAYOUT=\"\w*"/XKBLAYOUT=\"'de'\"/g' /etc/default/keyboard
              """
        },
        {
          name: "Install Avahi Ÿ©( ·êõ )Ÿà"
          content: """
              apt-get install -y -m avahi-daemon
              mkdir -p /etc/avahi/services
              """
        },
        {
          name: "Configure Avahi (*‚âß‚àÄ‚â¶)Ôæâ DEVICE-INFO"
          content: """
              cat <<EOF >/etc/avahi/services/device-info.service
              <?xml version="1.0" standalone='no'?><!--*-nxml-*-->
              <!DOCTYPE service-group SYSTEM "avahi-service.dtd">
              <service-group>
                <name replace-wildcards="yes">‚î¥‚î¨‚î¥‚î§¬¥ÔºØ¬¥)Ôæâ  """${IMG_CSTMZR_USERNAME}"""!?  Œ£(‚Äò–î‚Äô‚Åï)</name>
                <service>
                  <type>_device-info._tcp</type>
                  <port>0</port>
                  <txt-record>model=AirPortExtreme5</txt-record>
                  <!-- check /System/Library/CoreServices/CoreTypes.bundle/Contents/Info.plist for all possible values -->
                </service>
              </service-group>
              EOF
              """
        },
        {
          name: "Configure Avahi (*‚âß‚àÄ‚â¶)Ôæâ SSH"
          content: """
              cat <<EOF >/etc/avahi/services/ssh.service
              <?xml version="1.0" standalone='no'?><!--*-nxml-*-->
              <!DOCTYPE service-group SYSTEM "avahi-service.dtd">
              <service-group>
                <name replace-wildcards="yes">‚åí‚åí„ÄÄ‚åí ‚Äú‚äÇ(„ÄÄ„Å£‚òâœâ‚òâ)„Å£  """${IMG_CSTMZR_USERNAME}"""'s SSH üö™</name>>
                <service>
                  <type>_ssh._tcp</type>
                  <port>"""${img.ssh.port}"""</port>
                  <txt-record>user="""${IMG_CSTMZR_USERNAME}"""</txt-record>
                </service>
              </service-group>
              EOF
              """
        },
        {
          name: "Configure Avahi (*‚âß‚àÄ‚â¶)Ôæâ SFTP"
          content: """
              cat <<EOF >/etc/avahi/services/sftp.service
              <?xml version="1.0" standalone='no'?><!--*-nxml-*-->
              <!DOCTYPE service-group SYSTEM "avahi-service.dtd">
              <service-group>
                <name replace-wildcards="yes">‚î¥‚î¨‚î¥‚î§üóÑÔ∏è  """${IMG_CSTMZR_USERNAME}"""'s files  üìÅÔ∏è‚îó(^o^„ÄÄ)‚îì‰∏â</name>
                <service>
                  <type>_sftp-ssh._tcp</type>
                  <port>"""${img.ssh.port}"""</port>
                  <txt-record>path=/home/"""${IMG_CSTMZR_USERNAME}"""</txt-record>
                  <txt-record>u="""${IMG_CSTMZR_USERNAME}"""</txt-record>
                </service>
              </service-group>
              EOF
              """
        },
        {
          name: "Configure Avahi (*‚âß‚àÄ‚â¶)Ôæâ SMB"
          content: """
              cat <<EOF >/etc/avahi/services/smb.service
              <?xml version="1.0" standalone='no'?><!--*-nxml-*-->
              <!DOCTYPE service-group SYSTEM "avahi-service.dtd">
              <service-group>
                <name replace-wildcards="yes">‚î¥‚î¨‚î¥‚î§ü™ü  """${IMG_CSTMZR_USERNAME}"""'s files  üìÅÔ∏è‚îî(>œâ<„ÄÇ)‚îê‰∏â</name>
                <service>
                  <type>_smb._tcp</type>
                  <port>445</port>
                  <txt-record>user="""${IMG_CSTMZR_USERNAME}"""</txt-record>
                  <txt-record>path=/home</txt-record>
                </service>
              </service-group>
              EOF
              """
        },
        {
          name: "Configure Avahi (*‚âß‚àÄ‚â¶)Ôæâ BOTHER-YOU"
          content: """
              cat <<EOF >/etc/avahi/services/bother-you.service
              <?xml version="1.0" standalone='no'?><!--*-nxml-*-->
              <!DOCTYPE service-group SYSTEM "avahi-service.dtd">
              <service-group>
                <name replace-wildcards="yes">‚î¥‚î¨‚î¥‚î§ÔΩ•‚ÄøÔΩ•)œÉ  """${IMG_CSTMZR_USERNAME}"""'s status  üïö(Àä‚ÄøÀã‚Åï)2'</name>
                <service>
                  <type>_http._tcp</type>
                  <port>80</port>
                  <txt-record>path=/status</txt-record>
                </service>
              </service-group>
              EOF
              """
        },
        {
          name: "Enable Avahi (‡∏á Õ° ò Õú ñ Õ° ò)‡∏á"
          content: """
              systemctl enable avahi-daemon
              systemctl start avahi-daemon
              """
        },
      ]
    },
  ]

  first-boot = [ # TODO implement first-boot, hypricot, ansible
    {
      name: "Use available space Ÿ©(Àä·óúÀã*)Ÿà"
      content: """
          sudo raspi-config --expand-rootfs
          """
    },
    {
      name: "(€∂‚Ä¢ÃÄ·¥ó‚Ä¢ÃÅ)€∂ REBOOT"
      content: """
          shutdown -r now
          """
    },
  ]
}
